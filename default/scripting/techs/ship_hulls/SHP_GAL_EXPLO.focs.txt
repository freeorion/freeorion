Tech
    name = "SHP_GAL_EXPLO"
    description = "SHP_GAL_EXPLO_DESC"
    short_description = "POLICY_UNLOCK_SHORT_DESC"
    category = "SHIP_PARTS_CATEGORY"
    researchcost = 4 * [[TECH_COST_MULTIPLIER]]
    researchturns = 1
    tags = [ "PEDIA_SHIP_PARTS_CATEGORY" "THEORY" ]
    unlock = Item type = Policy name = "PLC_EXPLORATION"
    effectsgroups = [
        EffectsGroup
            scope = And [
                Planet size = Tiny
                OwnedBy empire = Source.Owner
            ]
            accountinglabel = "TINY_PLANET_LABEL"
            effects = SetMaxSupply value = Value + 2

        EffectsGroup
            scope = And [
                Planet size = Small
                OwnedBy empire = Source.Owner
            ]
            accountinglabel = "SMALL_PLANET_LABEL"
            effects = SetMaxSupply value = Value + 1

        EffectsGroup
            scope = And [
                Planet size = Large
                OwnedBy empire = Source.Owner
            ]
            accountinglabel = "LARGE_PLANET_LABEL"
            effects = SetMaxSupply value = Value - 1

        EffectsGroup
            scope = And [
                Planet size = Huge
                OwnedBy empire = Source.Owner
            ]
            accountinglabel = "HUGE_PLANET_LABEL"
            effects = SetMaxSupply value = Value - 2

        EffectsGroup
            scope = And [
                Planet type = GasGiant
                OwnedBy empire = Source.Owner
            ]
            accountinglabel = "GAS_GIANT_LABEL"
            effects = SetMaxSupply value = Value - 1

        EffectsGroup    // outpost supply increases 1 per turn up to max
            scope = And [
                Planet
                OwnedBy empire = Source.Owner
                Not Species
            ]
            priority = [[AFTER_ALL_TARGET_MAX_METERS_PRIORITY]]
            effects = SetSupply value = min(Value(Target.MaxSupply), Value + 1)


        // generate sitrep for any planet that is about to increase to above the
        // recolonizing population, while also having sufficient happiness to do
        // do so
        EffectsGroup
            scope = And [
                Planet
                OwnedBy empire = Source.Owner
                CanColonize
                
                (LocalCandidate.Population              <  LocalCandidate.TargetPopulation)
                (LocalCandidate.Population +
                    LocalCandidate.Population*[[GROWTH_RATE_FACTOR]]*(LocalCandidate.TargetPopulation + 1 - LocalCandidate.Population)
                    >= [[MIN_RECOLONIZING_SIZE]])
                    
                (LocalCandidate.TargetHappiness         >= [[MIN_RECOLONIZING_HAPPINESS]]           )
                (LocalCandidate.Happiness               >= [[MIN_RECOLONIZING_HAPPINESS]] - 1       )
                Or [
                    (0.1 <= LocalCandidate.Population   <= ([[MIN_RECOLONIZING_SIZE]] - 0.001)      )
                    (0.1 <= LocalCandidate.Happiness    <= ([[MIN_RECOLONIZING_HAPPINESS]] - 0.001) )
                ]
            ]
            effects = [
                GenerateSitRepMessage
                    message = "SITREP_POP_THRESHOLD"
                    label = "SITREP_POP_THRESHOLD_LABEL"
                    icon = "icons/sitrep/colony_growth.png"
                    parameters = [
                        tag = "planet" data = Target.ID
                    ]
                    empire = Source.Owner
                ]

        EffectsGroup
            scope = Source
            activation = Turn low = 0 high = 0
            effects = [
                GenerateSitRepMessage
                    message = "SITREP_WELCOME"
                    label = "SITREP_WELCOME_LABEL"  // explicitly provided so that the custom SitRep intro message can share the same SitRepPanel filter
                    icon = "icons/sitrep/fo_logo.png"
                    empire = Source.Owner
                ]
    ]
    graphic = "icons/tech/galactic_exploration.png"

#include "/scripting/common/misc.macros"
#include "/scripting/common/priorities.macros"
#include "/scripting/common/base_prod.macros"
#include "/scripting/species/common/population.macros"


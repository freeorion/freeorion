[tool.black]
# do not include pyi files, since they are generated
include = '\.py?$'
# Add non python directories to extended ignore
# This speedups black run
--extend-exclude = """
^/(
client
| cmake
| combat
| doc
| default/data
| default/shaders
| default/stringtables
| documentation
| Empire
| GG
| godot
| msvc2017
| msvc2019
| msvc2022
| network
| packaging
| parse
| python
| server
| snap
| test
| tmp
| UI
| universe
| util
)/
"""
target-version = ["py39"]
line-length=120

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"*auth/auth.py" = ["E402"]
"*chat/chat.py" = ["E402"]
"*universe_generation/universe_generator.py" = ["E402"]
"*FreeOrionAI.py" = ["E402"]
"*universe_generation/teams.py" = ["E402"]
"__init__.py" = [
    "F401",
    "F403",
]
"*turn_events/turn_events.py" = ["E402"]
"*tests/conftest.py" = [
    "E402",
    "F401",
]
# Limitations for FOCS skeletons, it would be nice to solve this
"default/scripting/*" =  ["F403", "F405"]

# Since imports are empty we need to use asterisk import between skeletons
"default/scripting/focs/*" = ["F405"]
"default/scripting/game_rules.focs.py"=["F821"]
"test-scripting/game_rules.focs.py"=["F821"]
"test-scripting/*"=["F405", "F403"]

[tool.ruff.lint.isort]
extra-standard-library=["freeorion", "freeOrionAIInterface"]


[tool.ruff.lint]
select = [
    "C9",
    "E",
    "F",
    "W",
    "UP",
    "I",
    "ANN",
]

ignore = [
    "E501",
    # Annotation won't fix
    "ANN101", "ANN202", "ANN204", "ANN102",

    # Annotation nice to fix
    "ANN0",
    "ANN201",
    "ANN205",
    "ANN401",
]

[tool.ruff]


src = [
    "default/python",
    "default/python/AI",
    "default/python/universe_generation",
    "default/python/charting",
    "default/scripting",
    "test-scripting",
    "check"
]


target-version = "py39"
line-length=120
exclude = [
    "*_venv/",
    "venv_*/",
    "venv/",
]


builtins = []


[tool.mypy]
exclude = [
    # Temp and tech dirs
    "^(venv|venv_)",
    # Not scripting directories
    '^default/data',
    '^default.python',
    '^test-scripting',
    '^check',
    '^doc',
    '^cmake',
    '^msvc',
    '^scripting/common',
]

explicit_package_bases = true
no_site_packages = true

mypy_path = "default/scripting"
disable_error_code = ['name-defined', 'var-annotated']
fast_module_lookup = true

[tool.pyright]
include = ["default/scripting/", "check/check_file_changed"]
exclude=[]
pythonVersion = "3.9"
strictListInference = true
strictDictionaryInference = true
strictSetInference = true
reportUndefinedVariable = false


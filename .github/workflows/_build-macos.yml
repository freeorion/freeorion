name: "MacOS"

on:
  workflow_call:
    inputs:
      os:
        type: string
      weekly-deploy:
        type: boolean
        default: false
jobs:
  macos:
    name: ${{ inputs.os }}
    runs-on: ${{ inputs.os }}
    env:
      CACHE_NAME: macos-full
      CMAKE_BUILD_PARALLEL_LEVEL: 2
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Clean up Mono
        run: sudo ./.github/workflows/mono-uninstall.sh
      - name: Prepare ccache timestamp
        id: build-macos-ccache-timestamp
        shell: cmake -P {0}
        run: |
          string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
          file(APPEND "$ENV{GITHUB_OUTPUT}" "timestamp=${current_date}")
      - name: Cache compilation
        uses: actions/cache@v3
        with:
          path: ~/Library/Caches/
          key: build-${{ inputs.os }}-ccache-${{ steps.build-macos-ccache-timestamp.outputs.timestamp }}
          restore-keys: |
            build-${{ inputs.os }}-ccache-
      - name: Show ccache statistics before build
        run: |
          export PATH="/usr/local/opt/ccache/libexec:$PATH"
          brew install ccache
          ccache --show-stats || true
      - name: Configure
        run: |
          export PATH="/usr/local/opt/ccache/libexec:$PATH"
          ccache --set-config=max_size=500M --set-config=sloppiness=file_macro
          ccache --zero-stats
          mkdir build
          cd build
          alias cmake="/usr/local/bin/gtimeout 40m /usr/local/bin/cmake"
          cmake -GXcode -DBUILD_TESTING=ON -DBUILD_CLIENT_GODOT=ON -DBoost_NO_BOOST_CMAKE=ON -DGLEW_USE_STATIC_LIBS=ON ..
      - name: Build
        run: |
          export PATH="/usr/local/opt/ccache/libexec:$PATH"
          alias cmake="/usr/local/bin/gtimeout 40m /usr/local/bin/cmake"
          cd build
          cmake --build . --config Release -- -parallelizeTargets
      - name: Test
        # Tests don't find dynamic libraries in build/Release on Macos 12
        if: ${{ inputs.os == 'macos-13' || inputs.os == 'macos-14' }}
        run: |
          cd build
          export PATH="$(pwd)/Release:/usr/local/opt/ccache/libexec:$PATH"
          export DYLD_FALLBACK_LIBRARY_PATH="$(pwd)/dep/lib:$(pwd)/Release"
          export DYLD_LIBRARY_PATH="$(pwd)/dep/lib:$(pwd)/Release:$DYLD_LIBRARY_PATH"
          cmake --build . --config Release --target unittest --verbose
      - name: Generate binaries
        run: |
          export PATH="/usr/local/opt/ccache/libexec:$PATH"
          alias cmake="/usr/local/bin/gtimeout 40m /usr/local/bin/cmake"
          cd build
          max_tries=10
          i=0
          until cmake --build . --config Release --target package -- -parallelizeTargets; do
            if [ $i -eq $max_tries ]; then
              echo "Error: failed after ${max_tries} tries."
              exit 1
            fi
          done
          ccache --cleanup
          ccache --show-stats || true
      - name: Upload binaries only
        uses: actions/upload-artifact@v4
        if: ${{ inputs.weekly-deploy }}
        with:
          name: weekly-artifacts-sf-macos-${{ github.run_number }}
          path: build/FreeOrion_*_Test_MacOSX_*.dmg
          if-no-files-found: error
          retention-days: 1

name: "Windows build"

on:
  push:
    paths-ignore:
      - 'msvc*/**'
      - 'check/**'
      - 'doc/**'
      - 'packaging/**'
      - 'snap/**'
      - '*.md'
      - 'check/**'
      - 'default/**'
      - 'test-scripting/**'
  pull_request:
    paths-ignore:
      - 'msvc*/**'
      - 'check/**'
      - 'doc/**'
      - 'packaging/**'
      - 'snap/**'
      - '*.md'
      - 'check/**'
      - 'default/**'
      - 'test-scripting/**'

jobs:
  build-windows-2019-cmake:
    name: MSVS 2019 on Windows CMake
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v3
      - id: flags
        run: python .github/helper_scripts/set_flags.py
        with:
          - SHOULD_BUILD
          - SHOULD_UPLOAD_WEEKLY_BUILD
          - SHOULD_UPLOAD_BINARIES
      - name: Build with CMake 2019
        if: ${{ env.SHOULD_BUILD }}
        uses: ./.github/actions/cmake-build
        with:
          mvc: '2019'
          generator-name: 'Visual Studio 16 2019'
          toolset-spec: 'v142'
  build-windows-2022-cmake:
    name: MSVS 2022 on Windows CMake
    runs-on: windows-2022
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - id: flags
        run: python .github/helper_scripts/build_windows_flags.py
      - name: Build with CMake 2022
        if: ${{ env.SHOULD_BUILD }}
        uses: ./.github/actions/cmake-build
        with:
          mvc: '2022'
          generator-name: 'Visual Studio 17 2022'
          toolset-spec: 'v143'
      - name: Generate binaries only
        if: ${{ env.SHOULD_UPLOAD_WEEKLY_BUILD }} || ${{ env.SHOULD_UPLOAD_BINARIES }}
        run: |
          pushd build
          cpack -V -C Release -G ZIP -D CPACK_ARCHIVE_COMPONENT_INSTALL=ON -D CPACK_MONOLITHIC_INSTALL=OFF -D CPACK_COMPONENTS_ALL=binaries
      - name: Decrypt deploy SSH key
        if: ${{ env.SHOULD_UPLOAD_WEEKLY_BUILD }}
        run: bash .github/pre-deploy.sh
        env:
          DEPLOY_SSH_PASSWORD: ${{ secrets.DEPLOY_SSH_PASSWORD }}
      - name: Upload weekly-test binaries only
        if: ${{ env.SHOULD_UPLOAD_WEEKLY_BUILD }}
        run: bash -c 'scp build/FreeOrion_*.zip o01eg@frs.sourceforge.net:/home/frs/project/freeorion/FreeOrion/Test/'
      - name: Upload binaries artefacts
        if: ${{ env.SHOULD_UPLOAD_BINARIES }}
        uses: actions/upload-artifact@v3
        with:
          name: freeorion-binaries-win32-build-${{ github.run_number }}
          path: build/FreeOrion_*.zip
          retention-days: 7

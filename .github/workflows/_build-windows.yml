name: "Windows"

on:
  workflow_call:
    secrets:
      DEPLOY_SSH_PASSWORD:
jobs:
  windows-2022-cmake:
    name: MSVS 2022 on Windows CMake
    runs-on: windows-2022
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Download SDK
        id: download-sdk
        uses: suisei-cn/actions-download-file@v1.4.0
        with:
          url: https://github.com/freeorion/freeorion-sdk/releases/download/v14/FreeOrionSDK_14_MSVC-v143-Win32.zip
          target: ../
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.3.1
        with:
          vs-prerelease: true
      - name: Configure
        shell: pwsh
        run: |
          Remove-Item -LiteralPath "C:/hostedtoolcache/windows/Python/" -Force -Recurse # Ensure that system Python is not used
          unzip -q ../${{ steps.download-sdk.outputs.filename }} -d ..
          mkdir build
          pushd build
          cmake -G "Visual Studio 17 2022" -T "v143" -A Win32 -DBUILD_TESTING=On -DBUILD_CLIENT_GODOT=On -DCMAKE_C_FLAGS=/MP -DCMAKE_CXX_FLAGS=/MP ..
      - name: Build
        shell: pwsh
        run: |
          pushd build
          cmake --build . --config "Release" -- /maxcpucount /property:BuildInParallel=true /property:CL_MPCount=2 /verbosity:minimal
      - name: Test
        shell: pwsh
        run: |
          pushd build
          $env:Path += ";$($pwd.Path)\\Release"
          cmake --build . --config "Release" --target unittest
      - name: Download Godot
        id: download-godot
        uses: suisei-cn/actions-download-file@v1.4.0
        with:
          url: https://downloads.tuxfamily.org/godotengine/3.2.3/Godot_v3.2.3-stable_win32.exe.zip
          target: ../
      - name: Download Mesa
        id: download-mesa
        uses: suisei-cn/actions-download-file@v1.4.0
        with:
          url: https://downloads.fdossena.com/geth.php?r=mesa-latest
          target: ../
      - name: Install Godot and dependencies
        shell: pwsh
        run: |
          unzip -q ../${{ steps.download-godot.outputs.filename }} -d build/Release
          mkdir build/Release/Godot_v3.2.3-stable_win32.exe.local
          pushd build/Release/Godot_v3.2.3-stable_win32.exe.local
          7z e ../../../../${{ steps.download-mesa.outputs.filename }}
      - name: Test Godot
        shell: pwsh
        run: |
          $env:Path += ";$($pwd.Path)\\build\\Release"
          .\build\Release\Godot_v3.2.3-stable_win32.exe --no-window --disable-render-loop --video-driver GLES2 --verbose -s --path godot addons/gut/gut_cmdln.gd -gdir=res://test/ -ginclude_subdirs -gexit
      - name: Generate binaries only
        run: |
          pushd build
          cpack -V -C Release -G ZIP -D CPACK_ARCHIVE_COMPONENT_INSTALL=ON -D CPACK_MONOLITHIC_INSTALL=OFF -D CPACK_COMPONENTS_ALL=binaries
      - name: Decrypt deploy SSH key
        if: github.ref == 'refs/heads/weekly-test-builds' && github.event_name == 'push'
        run: bash .github/pre-deploy.sh
        env:
          DEPLOY_SSH_PASSWORD: ${{ secrets.DEPLOY_SSH_PASSWORD }}
      - name: Upload weekly-test binaries only
        if: github.ref == 'refs/heads/weekly-test-builds' && github.event_name == 'push'
        run: bash -c 'scp build/FreeOrion_*.zip o01eg@frs.sourceforge.net:/home/frs/project/freeorion/FreeOrion/Test/'
      - name: Upload binaries artefacts
        uses: actions/upload-artifact@v3
        with:
          name: freeorion-binaries-win32-build-${{ github.run_number }}
          path: build/FreeOrion_*.zip
          retention-days: 7

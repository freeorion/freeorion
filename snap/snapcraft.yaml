---
name: freeorion
base: core20
summary: turn-based space empire and galactic conquest (4X) computer game
description: |
  FreeOrion is a free, open source, turn-based space empire and galactic
  conquest (4X) computer game being designed and built by the FreeOrion project.
  FreeOrion is inspired by the tradition of the Master of Orion games, but is
  not a clone or remake of that series or any other game.
confinement: strict
adopt-info: freeorion
architectures:
  - build-on: amd64

# Build OK but release fails? Check https://dashboard.snapcraft.io/snaps/freeorion/collaboration/
apps:
  freeorion:
    command: usr/bin/freeorion -S $SNAP_USER_COMMON/save
    extensions: [gnome-3-38]
    plugs: [home, pulseaudio, opengl, network, screen-inhibit-control, browser-support, x11]
    desktop: usr/share/applications/org.freeorion.FreeOrion.desktop
    environment:
      LD_LIBRARY_PATH: $SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/freeorion
      LIBGL_DRIVERS_PATH: $SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/dri
      # PYTHONPATH: $SNAP/usr/lib/python3.6
  freeorion-godot:
    # LD_LIBRARY_PATH=$SNAP/usr/lib/x86_64-linux-gnu/freeorion:$SNAP/usr/lib/x86_64-linux-gnu/:$SNAP/usr/lib/x86_64-linux-gnu/pulseaudio LIBGL_DRIVERS_PATH=$SNAP/usr/lib/x86_64-linux-gnu/dri godot3-runner   --resource.path $SNAP/usr/share/freeorion/default/ -S $SNAP_USER_COMMON/save
    command: usr/bin/godot3-runner --main-pack $SNAP/usr/share/freeorion/freeorion.pck --resource.path $SNAP/usr/share/freeorion/default/ -S $SNAP_USER_COMMON/save
    extensions: [gnome-3-38]
    plugs: [home, pulseaudio, opengl, network, screen-inhibit-control, browser-support, x11]
    desktop: usr/share/applications/org.freeorion.FreeOrion.desktop
    environment:
      LD_LIBRARY_PATH: $SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/freeorion
      LIBGL_DRIVERS_PATH: $SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/dri
      #PYTHONPATH: $SNAP/usr/lib/python3.6
  freeoriond:
    command: usr/bin/freeoriond
    plugs: [home, network, network-bind]
    environment:
      LD_LIBRARY_PATH: $SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/freeorion
      #PYTHONPATH: $SNAP/usr/lib/python3.6
  freeoriond-dedicated:
    command: usr/bin/freeoriond --hostless --network.server.unconn-human-empire-players.max 0 --network.server.conn-human-empire-players.min 0
    plugs: [home, network, network-bind]
    environment:
      LD_LIBRARY_PATH: $SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/freeorion
      #PYTHONPATH: $SNAP/usr/lib/python3.6

layout:
  # the path to the freeorion libs has to be known when snapcraft exports the godot client
  # $SNAP depends on the release number so it is unknown/wrong/different in the build step
  /usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/freeorion:
    symlink: $SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/freeorion

parts:
  freeorion:
    source: .
    override-build: |
      # Icon paths in the desktop file will be rewritten to use ${SNAP}/<file> if specified as desktop file in snapcraft.yaml
      sed -i.bak -e "s|Icon=freeorion$|Icon=meta/gui/icon.png|g" ../src/packaging/org.freeorion.FreeOrion.desktop
      sed -i.bak -e 's|="res://bin/linux.*/libfreeoriongodot.so"|="/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/freeorion/libfreeoriongodot.so"|g' ../src/godot/freeoriongodot.gdnlib
      snapcraftctl build
      # godot-headless wants a writable homedir, simulate it
      mkdir -p home/
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/usr/share/freeorion/"
      # Note: we use godot3-headless really
      HOME=$(pwd)/home godot3-server --path ../src/godot --export-pack "Linux/X11" "${SNAPCRAFT_PART_INSTALL}/usr/share/freeorion/freeorion.pck"
    plugin: cmake
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/usr -DBUILD_CLIENT_GODOT=ON
    #cmake-parameters: [-DBUILD_TESTING=ON]
    override-pull: |
      snapcraftctl pull
      # this versioning works for e.g. weekly-test-builds
      branchn="$(git rev-parse --abbrev-ref HEAD)"
      version="$(git log -n1 --date=short --format='%cd.%h' $branchn)"
      case $version in
        v*) version=$(echo $version | tail -c +2) ;;
        *)  version=$(echo $version | head -c 32) ;;
      esac
      [ -n "$(echo $version | grep '-')" ] && grade=devel || grade=stable
      snapcraftctl set-version "$version"
      snapcraftctl set-grade "$grade"
    override-prime: |
      snapcraftctl prime
      mkdir -p ${SNAPCRAFT_PRIME}/meta/gui
      cp ${SNAPCRAFT_PART_SRC}/default/data/art/icons/FO_Icon_256x256.png ${SNAPCRAFT_PRIME}/meta/gui/icon.png
    build-packages:
      - cmake
      - debhelper
      - dpkg-dev
      - git
      - libalut-dev
      - libboost1.71-all-dev
      - libfreetype6-dev
      - libgl1-mesa-dev
      - libglew-dev
      - libjpeg-dev
      - libogg-dev
      - libopenal-dev
      - libpng-dev
      - libsdl2-dev
      - libtiff-dev
      - libvorbis-dev
      - pkg-config
      - godot3-server
      # - python
    stage-packages:
      - mesa-utils
      - libgl1-mesa-dri
      # - python3
      # - libpython3.8
      - libboost-date-time1.71.0
      - libboost-filesystem1.71.0
      - libboost-iostreams1.71.0
      - libboost-locale1.71.0
      - libboost-log1.71.0
      - libboost-python1.71.0
      - libboost-regex1.71.0
      - libboost-serialization1.71.0
      - libboost-system1.71.0
      - libboost-thread1.71.0
      - libboost-test1.71.0
      - libglew2.1
      - libglu1-mesa
      - libopenal1
      - libsdl2-2.0-0
      - libvorbis0a
      - libvorbisfile3
      - libpng16-16
      - libfreetype6
      - godot3-runner

